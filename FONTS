	subttl	'Fonts'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							;;
;;			  Fonts				;;
;;							;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; This is the blank font.  It draws absolutely nothing
;
blank	db	0,0			; 0 lines of 0 bytes per line...

;
; Girders.  These shouldn't be crunched, because they are pointed
;  to by GFNT[].
;
fgird1	db	2,6			; right half of vanilla girder
	db	$55,$50,$04,$00
	db	$15,$10,$51,$50
	db	$40,$40,$55,$50

fgird2	db	2,6			; left half of vanilla girder
	db	$55,$50,$40,$40
	db	$51,$50,$15,$10
	db	$04,$00,$55,$50

fgird3	db	2,6			; 'Tube'
	db	%10101010, %10100000
	db	%10100000, %10100000
	db	%10000000, %00100000
	db	%10000000, %00100000
	db	%10100000, %10100000
	db	%10101010, %10100000

fgird4	db	2,6			; conveyerbelt part
	db	$ff,$f0,$0c,$00
	db	$0c,$00,$0c,$00
	db	$0c,$00,$ff,$f0

;
; Playfield hammer
; (red and blue version)
;
pfham	db	2,12
	db	%00000010, %00000000
	db	%01010101, %01010000
	db	%01011010, %10010000
	db	%01010101, %01010000
	db	%01010101, %01010000
	db	%01010101, %01010000
	db	%00000010, %00000000
	db	%00000010, %00000000
	db	%00000010, %00000000
	db	%00000010, %00000000
	db	%00000010, %00000000
	db	%00000010, %00000000

;
; four_high vanilla ladder
;
v4ladr	db	2,4
	db	$aa,$a0
	db	$80,$20
	db	$80,$20
	db	$80,$20

;
; horizontal piece of ladder (two dots of PF2)
vladr	db	2,1,$80,$20

;
; horizontal piece of ladder (a rung)
vsladr	db	2,1,$aa,$a0

;
; four_high red ladder
r4ladr	db	2,4
	db	%01010101,%01010000
	db	%01000000,%00010000
	db	%01000000,%00010000
	db	%01000000,%00010000

;
; horizontal peice of red ladder
rladr	db	2,1,%01000000, %00010000

;
; horizontal peice of red ladder (a rung again)
rsladr	db	2,1,%01010101, %01010000

;
; the rivet
;
rivet	db	2,8
	db	%01010101, %01010000
	db	%10010101, %01100000
	db	%10011111, %01100000
	db	%10011111, %01100000
	db	%10011111, %01100000
	db	%10011111, %01100000
	db	%00010101, %01000000
	db	%00000101, %00000000

;
; These fonts are used to EOR rivets out of existence
; There are really only two (because segments are drawn only on even
; pixel boundaries, and its not necessary to have the mod_1 and mod_3
; versions...I hope...)
;
river1					; "unused" mod_1 boundary...
river0	db	2,8
	db	%01010101, %01010000
	db	%00010101, %01000000
	db	%00011111, %01000000
	db	%00011111, %01000000
	db	%00011111, %01000000
	db	%00011111, %01000000
	db	%00010101, %01000000
	db	%00000101, %00000000

river3					; "unused" mod_3 boundary...
river2	db	2,8
	db	%00000101, %01010101
	db	%00000001, %01010100
	db	%00000001, %11110100
	db	%00000001, %11110100
	db	%00000001, %11110100
	db	%00000001, %11110100
	db	%00000001, %01010100
	db	%00000000, %01010000

;
; 'Help!' font
;
help	db	4,16
	db	%00000000, %00000000, %00000000, %00001010
	db	%00000000, %00000000, %00001010, %00001010
	db	%00000000, %00000010, %00001000, %10001010
	db	%00000000, %10100010, %00001000, %10001010
	db	%00001000, %10000010, %00001000, %10001010
	db	%10001000, %10000010, %00001000, %10001010
	db	%10001000, %10000010, %00001000, %10001010
	db	%10101000, %10100010, %00001000, %10001010
	db	%10001000, %10000010, %00001000, %10001010
	db	%10001000, %10000010, %00001010, %00001010
	db	%00001000, %10000010, %00001000, %00001010
	db	%00000000, %10100010, %00001000, %00001010
	db	%00000000, %00000010, %10001000, %00001010
	db	%00000000, %00000000, %00001000, %00000000
	db	%00000000, %00000000, %00000000, %00001010
	db	%00000000, %00000000, %00000000, %00001010


;
; The full heart
;
bheart	=	*				; ***FOR NOW***
heart
	db	3,15
	db	%00000101, %00000001, %01000000
	db	%00010101, %01000101, %01010000
	db	%00010101, %01000101, %01010000
	db	%01010101, %01010101, %01010100
	db	%01010101, %01010101, %01010100
	db	%01010101, %01010101, %01010100
	db	%01010101, %01010101, %01010100
	db	%00010101, %01010101, %01010000
	db	%00010101, %01010101, %01010000
	db	%00000101, %01010101, %01000000
	db	%00000101, %01010101, %01000000
	db	%00000001, %01010101, %00000000
	db	%00000001, %01010101, %00000000
	db	%00000000, %01010100, %00000000
	db	%00000000, %00010000, %00000000


;
; An elevator segment
; THIS IS NOT a standard font: it has no width and height prefix.  It is
; meant to be part of the wired code for elevator refresh.
;
elgird
	db	%00000000, %00010100, %00000000
	db	%01010101, %01010101, %01010101
	db	%00000100, %00000100, %00000100
	db	%00010101, %00010101, %00010101
	db	%01010001, %01010001, %01010001
	db	%01000000, %01000000, %01000000
	db	%01010101, %01010101, %01010101
	db	%00000000, %00010100, %00000000

;
; border graphics for bonus counter
;
lbonus	db	2,9
	db	%00101000, 0
	db	%10100000, 0
	db	%10100000, 0
	db	%10100000, 0
	db	%10100000, 0
	db	%10100000, 0
	db	%10100000, 0
	db	%10100000, 0
	db	%00101010, %10000000

rbonus	db	2,9
	db	%00001010, 0
	db	%00000010, %10000000
	db	%00000010, %10000000
	db	%00000010, %10000000
	db	%00000010, %10000000
	db	%00000010, %10000000
	db	%00000010, %10000000
	db	%00000010, %10000000
	db	%10101010, 0


;
; "GAME OVER" font
;
qgover
	db	7,13
	db	%00101010, %10100000, %00101000
	db	 %00001010, %00000010, %10001010, %10101010
	db	%10100000, %00000000, %10101010
	db	 %00001010, %10001010, %10001010, %00000000
	db	%10100000, %00000010, %10000010
	db	 %10001010, %10101010, %10001010, %00000000
	db	%10100010, %10100010, %10000010
	db	 %10001010, %00100010, %10001010, %10101000
	db	%10100000, %10100010, %10101010
	db	 %10001010, %00000010, %10001010, %00000000
	db	%00101010, %10100010, %10000010
	db	 %10001010, %00000010, %10001010, %10101010
	db	%00000000, %00000000, %00000000
	db	 %00000000, %00000000, %00000000, %00000000
	db	%00101010, %10000010, %10000010
	db	 %10001010, %10101010, %00001010, %10101000
	db	%10100000, %10100010, %10000010
	db	 %10001010, %00000000, %00001010, %00001010
	db	%10100000, %10100010, %10000010
	db	 %10001010, %00000000, %00001010, %00001010
	db	%10100000, %10100010, %10000010
	db	 %10001010, %10101000, %00001010, %10101000
	db	%10100000, %10100000, %10101010
	db	 %00001010, %00000000, %00001010, %00101000
	db	%00101010, %10000000, %00101000
	db	 %00001010, %10101010, %00001010, %00001010

;
; The bottom elevator pulley
;
bpulley	db	3,6
	db	%00001111, %11111111, %11110000
	db	%00111111, %11111111, %11111100
	db	%11111010, %10101010, %10101111
	db	%11111010, %10101010, %10101111
	db	%11111111, %10101010, %11111111
	db	%00111111, %11111111, %11111100

;
; The top elevator pulley
;
upulley	db	3,6
	db	%00111111, %11111111, %11111100
	db	%11111111, %10101010, %11111111
	db	%11111010, %10101010, %10101111
	db	%11111010, %10101010, %10101111
	db	%00111111, %11111111, %11111100
	db	%00001111, %11111111, %11110000
	eject
; Prizes
; These are shoved into players; left-bottom justified in 8x8
; There's some confusion as to what to call the damn things....so I'm
; gonna do what I like, here...
;
prizbas	=	*
;
; the Umbrella
;
priz0	=	*-prizbas
	db	%00111000
	db	%01101100
	db	%11011100
	db	%11011110
	db	%10101010
	db	%00010000
	db	%00010000
	db	%00010000
	db	%00011100
	db	%00001000

;
; The "Birthday Cake" [I think...]
;
priz1	=	*-prizbas
	db	%00010000
	db	%01000100
	db	%00010000
	db	%01010100
	db	%01010100
	db	%11111110
	db	%11111110
	db	%00000000
	db	%11111110
	db	%11111110

;
; The Purse ["...omigosh...that's not a /Birthday Cake/???"]
;
priz2	=	*-prizbas
	db	%00111000
	db	%01000100
	db	%10000010
	db	%10000010
	db	%10111010
	db	%01101100
	db	%10101010
	db	%11010110
	db	%11101110
	db	%11111110

;
; The Hat
;
priz3	=	*-prizbas
	db	%00000000
	db	%00000000
	db	%00010100
	db	%00111100
	db	%00111000
	db	%00000000
	db	%01111100
	db	%11111110
	db	%11011010
	db	%11011010
priz4	=	*-prizbas
	eject
;
; interim stuff
;
fnsan0
fnsan1
fnsan2
fnsan3
	db	3,8
	db	%00000000, %01010000, %00000000
	db	%00000101, %11010100, %00000000
	db	%00011111, %01010111, %00000000
	db	%11010101, %11010101, %11000000
	db	%01010101, %01010101, %01010000
	db	%10101010, %10101010, %10100000
	db	%10101010, %10101010, %10100000
	db	%00101010, %10101010, %10000000
	subttl	'Alphanumeric fonts'
;
; Numbers and Letters
; In a wierd 3x6 font
;
let	macro	1,2,3,4,5,6
%L	db	$%1,$%2,$%3,$%4,$%5,$%6
	ENDM

;
; Numbers -- the roman numerals 0..9
;
;

fnum0	let	54,44,44,44,44,54	; 0
	let	10,50,10,10,10,54	; 1
	let	54,04,04,54,40,54	; 2
	let	54,04,04,54,04,54	; 3
	let	40,44,44,54,04,04	; 4
	let	54,40,40,54,04,54	; 5
	let	54,44,40,54,44,54	; 6
	let	54,04,04,04,04,04	; 7
	let	54,44,44,54,44,54	; 8
	let	54,44,44,54,04,54	; 9

;
; Letters - the alphabet, from A-Z
;
	let	00,00,00,00,00,00	; space
falpha	let	54,44,44,54,44,44	; A
	let	54,44,44,50,44,54	; B
	let	54,40,40,40,40,54	; C
	let	50,44,44,44,44,50	; D
	let	54,40,40,50,40,54	; E
	let	54,40,40,50,40,40	; F
	let	54,40,40,44,44,54	; G
	let	44,44,44,54,44,44	; H
	let	54,10,10,10,10,54	; I
	let	04,04,04,04,44,54	; J
	let	40,44,44,50,44,44	; K
	let	40,40,40,40,40,54	; L
	let	44,54,54,44,44,44	; M
	let	44,54,54,54,54,44	; N
	let	54,44,44,44,44,54	; O
	let	54,44,54,40,40,40	; P
	let	10,44,04,10,00,10	; "?" - question_mark
	let	54,44,44,54,50,44	; R
	let	54,40,40,54,04,54	; S
	let	54,10,10,10,10,10	; T
	let	44,44,44,44,44,54	; U
	let	44,44,44,44,54,10	; V
	let	44,44,44,54,54,44	; W
	let	44,44,10,10,44,44	; X
	let	44,44,44,10,10,10	; Y
	let	54,04,10,10,40,54	; Z
	let	00,00,00,54,00,00	; - (dash)

lmario	db	1,10			; little Mario (for scoreline)
	db	%00101000
	db	%10101000
	db	%00110100
	db	%11110100
	db	%01010100
	db	%01110100
	db	%11110100
	db	%00100100
	db	%01010100
	db	%01000100
	subttl	'Floating-score fonts'
	local
;
; Pointers to floating-score fonts
;
fscfnl	db	low :scpf1, low :scpf3, low :scpf5, low :scpf8
fscfnh	db	high :scpf1, high :scpf3, high :scpf5, high :scpf8

;
; '110'
;
:scpf1	db	3,6
	db	%00110000, %11111100, %11111100
	db	%11110000, %11001100, %11001100
	db	%00110000, %11001100, %11001100
	db	%00110000, %11001100, %11001100
	db	%00110000, %11001100, %11001100
	db	%11111100, %11111100, %11111100

;
; '300'
;
:scpf3	db	3,6
	db	%11111100, %11111100, %11111100
	db	%00001100, %11001100, %11001100
	db	%00001100, %11001100, %11001100
	db	%11111100, %11001100, %11001100
	db	%00001100, %11001100, %11001100
	db	%11111100, %11111100, %11111100

;
; '500'
;
:scpf5	db	3,6
	db	%11111100, %11111100, %11111100
	db	%11000000, %11001100, %11001100
	db	%11000000, %11001100, %11001100
	db	%11111100, %11001100, %11001100
	db	%00001100, %11001100, %11001100
	db	%11111100, %11111100, %11111100

;
; '800'
;
:scpf8	db	3,6
	db	%11111100, %11111100, %11111100
	db	%11001100, %11001100, %11001100
	db	%11001100, %11001100, %11001100
	db	%11111100, %11001100, %11001100
	db	%11001100, %11001100, %11001100
	db	%11111100, %11111100, %11111100

	subttl	'Spring fonts'
; spring fonts
;

;
; spring seq 0
;
fnspr0	db	2,16
	db	%10101010, %10101000
	db	%10101010, %10101000
	db	%00000101, %01000000
	db	%00000101, %01000000
	db	%00010010, %00010000
	db	%00010010, %00010000
	db	%01010010, %00010100
	db	%01000010, %00000100
	db	%01000010, %00000100
	db	%01010010, %00010100
	db	%00010010, %00010000
	db	%00010010, %00010000
	db	%00000101, %01000000
	db	%00000101, %01000000
	db	%10101010, %10101000
	db	%10101010, %10101000

;
; spring seq 1
;
fnspr1	db	2,12
	db	%10101010, %10101000
	db	%10101010, %10101000
	db	%00000101, %01000000
	db	%00010101, %01010000
	db	%00010010, %00010000
	db	%01010010, %00010100
	db	%01010010, %00010100
	db	%00010010, %00010000
	db	%00010101, %01010000
	db	%00000101, %01000000
	db	%10101010, %10101000
	db	%10101010, %10101000

;
; spring seq 2
;
fnspr2	db	2,8
	db	%10101010, %10101000
	db	%10101010, %10101000
	db	%00010101, %01010000
	db	%01010010, %00010100
	db	%01010010, %00010100
	db	%00010101, %01010000
	db	%10101010, %10101000
	db	%10101010, %10101000

;
; spring seq 3
;
fnspr3	db	2,6
	db	%10101010, %10101000
	db	%10101010, %10101000
	db	%01000010, %00010100
	db	%01010010, %00000100
	db	%10101010, %10101000
	db	%10101010, %10101000
	subttl	'Explosion graphics'
;
; sequence is:
;
;  0, 1, 0, 1, 2, 3, 4, 4 + floating_score + point sound, gone
;	

	db	4,3	; x,y offset
hhfx0	db	2,12
	db	%00000010, %10000000
	db	%00001010, %10100000
	db	%00100000, %00001000
	db	%00100000, %00001000
	db	%10000000, %00000010
	db	%10000000, %00000010
	db	%10000000, %00000010
	db	%10000000, %00000010
	db	%00100000, %00001000
	db	%00100000, %00001000
	db	%00001010, %10100000
	db	%00000010, %10000000

	db	4,5
hhfx1	db	2,8
	db	%00000010, %10000000
	db	%00001010, %10100000
	db	%00101000, %00101000
	db	%00101000, %00001000
	db	%00100000, %00101000
	db	%00101000, %00100000
	db	%00001010, %00100000
	db	%00000010, %10000000

	db	4,6
hhfx2	db	2,6
	db	%00000010, %10000000
	db	%00001010, %10100000
	db	%00001010, %10100000
	db	%00001010, %10100000
	db	%00001010, %10100000
	db	%00000010, %10000000

	db	4,7
hhfx3	db	2,4
	db	%00000000, %10000000
	db	%00000010, %10100000
	db	%00000010, %10100000
	db	%00000000, %10000000

	db	0,0
hhfx4	db	4,18
	db	%00000000, %00000010, %00000000, %00000000
	db	%00000000, %00000010, %00000000, %00000000
	db	%00100000, %00000010, %00000000, %10000000
	db	%00001000, %00000010, %00000010, %00000000
	db	%00000010, %00000010, %00001000, %00000000
	db	%00000000, %10000000, %00100000, %00000000
	db	%00000000, %00000000, %00000000, %00000000
	db	%00000000, %00000000, %00000000, %00000000
	db	%10101010, %10000000, %00001010, %10101000
	db	%00000000, %00000000, %00000000, %00000000
	db	%00000000, %00000000, %00000000, %00000000
	db	%00000000, %00000000, %00000000, %00000000
	db	%00000000, %10000000, %00001000, %00000000
	db	%00000010, %00000010, %00000010, %00000000
	db	%00001000, %00000010, %00000000, %10000000
	db	%00100000, %00000010, %00000000, %00100000
	db	%00000000, %00000010, %00000000, %00000000
	db	%00000000, %00000010, %00000000, %00000000

hhfx5	db	$8e,$96,$74,$80,$8a,$d5,$56,$80
	db	$8e,$f5,$57,$80,$8a,$b5,$55,$80
	db	$ea,$96,$74,$80,$00,$00,$00,$00
	db	$1c,$af,$70,$00,$1a,$ac,$68,$00
	db	$1a,$ef,$68,$00,$1a,$4c,$70,$00
	db	$1c,$4f,$68,$00
